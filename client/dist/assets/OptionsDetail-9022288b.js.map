{"version":3,"file":"OptionsDetail-9022288b.js","sources":["../../src/context/option/action.ts","../../src/pages/options/OptionsDetail.tsx"],"sourcesContent":["import { API_ENDPOINT } from \"../../config/constants\";\n\nexport const fetchOptionDetail = async (dispatch: any, id: string) => {\n  const token = localStorage.getItem(\"authToken\") ?? \"\";\n\n  try {\n    dispatch({ type: \"FETCH_OPTIONS_DETAIL_REQUEST\" });\n    const response = await fetch(\n      `${API_ENDPOINT}/election/question/${id}/addOptions`,\n      {\n        method: \"GET\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n      }\n    );\n    debugger;\n    const data = await response.json();\n    debugger;\n    dispatch({\n      type: \"FETCH_OPTIONS_DETAIL_SUCCESS\",\n      payload: data,\n    });\n  } catch (error) {\n    console.log(\"Error fetching selected quetion Option:\", error);\n    dispatch({\n      type: \"FETCH_OPTIONS_DETAIL_FAILURE\",\n      payload: \"Unable to load selected Quetion Option\",\n    });\n  }\n};\n\nexport const addOption = async (dispatch: any, queid: number, args: any) => {\n  try {\n    debugger;\n    const token = localStorage.getItem(\"authToken\") ?? \"\";\n    const response = await fetch(\n      `${API_ENDPOINT}/election/question/${queid}/addOptions`,\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${token}`,\n        },\n\n        // Next, I'll pass the `args` here\n        body: JSON.stringify(args),\n      }\n    );\n    debugger;\n    const data = await response.json();\n    if (!response.ok) {\n      throw new Error(\"Failed to create option for quetion \" + queid);\n    }\n    if (data.error) {\n      return { ok: false, error: data.error };\n    }\n\n    dispatch({ type: \"ADD_OPTION_SUCCESS\", payload: data });\n\n    // Next, I'll return a status called \"ok\", with value `true`\n    // as everything went well.\n    return { ok: true };\n  } catch (error) {\n    console.error(\"Operation failed:\", error);\n    return { ok: false, error };\n  }\n};\n\nexport const deleteOption = async (dispatch: any, id: number) => {\n  try {\n    const token = localStorage.getItem(\"authToken\") ?? \"\";\n    debugger;\n    const response = await fetch(`${API_ENDPOINT}/election/option/${id}`, {\n      method: \"DELETE\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${token}`,\n      },\n    });\n    if (!response.ok) {\n      throw new Error(\"Failed to delete option \" + id);\n    }\n    const data = await response.json();\n    debugger;\n    if (data.error) {\n      return { ok: false, error: data.error };\n    }\n    if (data.success) {\n      dispatch({ type: \"DELETE_OPTION_SUCCESS\", payload: id });\n      return { ok: true };\n    } else {\n      return { ok: false };\n    }\n  } catch (error) {\n    console.error(\"Operation failed:\", error);\n    return { ok: false, error };\n  }\n};\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport React, { useEffect, Fragment, useState } from \"react\";\r\n// import { useTasksDispatch, useTasksState } from \"../../context/task/context\";\r\n// import { refreshTasks } from \"../../context/task/actions\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useForm, SubmitHandler } from \"react-hook-form\";\r\n\r\n// import {\r\n//   useElectionsState,\r\n//   useElectionDispatch,\r\n// } from \"../../context/elections/context\";\r\n\r\nimport {\r\n  useElectionsDetailState,\r\n  useElectionDetailDispatch,\r\n} from \"../../context/electionData/context\";\r\n\r\nimport { TrashIcon } from \"@heroicons/react/24/outline\";\r\nimport {\r\n  addOption,\r\n  deleteOption,\r\n  fetchOptionDetail,\r\n} from \"../../context/option/action\";\r\nimport {\r\n  useOptionsDetailDispatch,\r\n  useOptionsDetailsState,\r\n} from \"../../context/option/context\";\r\nimport { fetchElectionDetail } from \"../../context/electionData/action\";\r\n\r\ntype Inputs = {\r\n  optionName: string;\r\n};\r\n\r\nconst OptionsDetail = () => {\r\n  let [isOpen, setIsOpen] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const openModal = () => setIsOpen(true);\r\n\r\n  const closeModal = () => setIsOpen(false);\r\n\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<Inputs>();\r\n\r\n  //   const electionState = useElectionsState();\r\n  //   const electionDispatch = useElectionDispatch();\r\n\r\n  let { electionID, quetionID } = useParams();\r\n  const { t } = useTranslation();\r\n\r\n  debugger;\r\n  const electionDetailState: any = useElectionsDetailState();\r\n  const { electionDetail } = electionDetailState;\r\n  const electionDetailDispatch = useElectionDetailDispatch();\r\n\r\n  const optionDetailState: any = useOptionsDetailsState();\r\n  const { optionsDetails, isLoading, isError, errorMessage } =\r\n    optionDetailState;\r\n  const optionDetailDispatch = useOptionsDetailDispatch();\r\n\r\n  useEffect(() => {\r\n    if (electionID) fetchElectionDetail(electionDetailDispatch, electionID);\r\n    if (quetionID) fetchOptionDetail(optionDetailDispatch, quetionID);\r\n  }, [quetionID, optionDetailDispatch, electionID, electionDetailDispatch]);\r\n\r\n  const selectedQuetion = electionDetail?.quetion.filter(\r\n    (quetion: any) => `${quetion?.id}` === quetionID\r\n  )?.[0];\r\n\r\n  if (isLoading) {\r\n    return <>{t(\"loading\")}</>;\r\n  }\r\n\r\n  if (!selectedQuetion) {\r\n    return (\r\n      <p className=\"font-semibold text-center text-red-500\">\r\n        {t(\"noSelectedQue\")}\r\n      </p>\r\n    );\r\n  }\r\n\r\n  const deleteOptionHandler = async (id: number) => {\r\n    console.log(id);\r\n    const response = await deleteOption(optionDetailDispatch, id);\r\n    console.log(response);\r\n  };\r\n\r\n  const onSubmit: SubmitHandler<Inputs> = async (data) => {\r\n    const { optionName } = data;\r\n    const response = await addOption(\r\n      optionDetailDispatch,\r\n      selectedQuetion?.id,\r\n      {\r\n        name: optionName,\r\n        qid: selectedQuetion?.id,\r\n      }\r\n    );\r\n    debugger;\r\n    if (response.ok) {\r\n      setIsOpen(false);\r\n    } else {\r\n      setError(response.error as React.SetStateAction<null>);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"mx-auto mb-3\">\r\n        <Link\r\n          to={`/account/election/${electionID}`}\r\n          className=\"rounded text-white bg-black text-sm inline px-2 py-2\"\r\n        >\r\n          {t(\"gotoBallotPage\")}\r\n        </Link>\r\n      </div>\r\n      <div className=\"flex justify-between\">\r\n        <h2 className=\"text-2xl mt-3 text-green-700 font-medium tracking-tight  dark:text-zinc-50\">\r\n          {t(\"manageQuetion\")}\r\n        </h2>\r\n        <button\r\n          id=\"newTaskBtn\"\r\n          onClick={openModal}\r\n          className=\"rounded-md bg-blue-600 px-4 py-2 m-2 text-sm font-medium text-white hover:bg-opacity-95 focus:outline-none focus-visible:ring-2 focus-visible:ring-white focus-visible:ring-opacity-75\"\r\n        >\r\n          {t(\"newOptionButtonText\")}\r\n        </button>\r\n\r\n        <Transition appear show={isOpen} as={Fragment}>\r\n          <Dialog as=\"div\" className=\"relative z-10\" onClose={closeModal}>\r\n            <Transition.Child\r\n              as={Fragment}\r\n              enter=\"ease-out duration-300\"\r\n              enterFrom=\"opacity-0\"\r\n              enterTo=\"opacity-100\"\r\n              leave=\"ease-in duration-200\"\r\n              leaveFrom=\"opacity-100\"\r\n              leaveTo=\"opacity-0\"\r\n            >\r\n              <div className=\"fixed inset-0 bg-black bg-opacity-25\" />\r\n            </Transition.Child>\r\n            <div className=\"fixed inset-0 overflow-y-auto\">\r\n              <div className=\"flex min-h-full items-center justify-center p-4 text-center\">\r\n                <Transition.Child\r\n                  as={Fragment}\r\n                  enter=\"ease-out duration-300\"\r\n                  enterFrom=\"opacity-0 scale-95\"\r\n                  enterTo=\"opacity-100 scale-100\"\r\n                  leave=\"ease-in duration-200\"\r\n                  leaveFrom=\"opacity-100 scale-100\"\r\n                  leaveTo=\"opacity-0 scale-95\"\r\n                >\r\n                  <Dialog.Panel className=\"w-full max-w-md transform overflow-hidden rounded-2xl bg-white p-6 text-left align-middle shadow-xl transition-all\">\r\n                    <Dialog.Title\r\n                      as=\"h3\"\r\n                      className=\"text-lg font-medium leading-6 text-gray-900\"\r\n                    >\r\n                      {t(\"NewQuetionModalHeader\")}\r\n                    </Dialog.Title>\r\n                    <div className=\"mt-2\">\r\n                      <form onSubmit={handleSubmit(onSubmit)}>\r\n                        {error && <span className=\"text-red-500\">{error}</span>}\r\n                        <input\r\n                          type=\"text\"\r\n                          id=\"name\"\r\n                          placeholder={t(\"newQueTitlePlaceHolder\")}\r\n                          autoFocus\r\n                          {...register(\"optionName\", { required: true })}\r\n                          className={`w-full border rounded-md py-2 px-3 my-4 text-gray-700 leading-tight focus:outline-none focus:border-blue-500 focus:shadow-outline-blue ${\r\n                            errors.optionName ? \"border-red-500\" : \"\"\r\n                          }`}\r\n                        />\r\n                        {errors.optionName && (\r\n                          <span className=\"text-red-500\">\r\n                            {t(\"requiredNote\")}\r\n                          </span>\r\n                        )}\r\n                        <button\r\n                          type=\"submit\"\r\n                          id=\"create-member-btn\"\r\n                          className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-600 px-4 py-2 mr-2 text-sm font-medium text-white hover:bg-blue-500 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\r\n                        >\r\n                          {t(\"submitButtonText\")}\r\n                        </button>\r\n                        <button\r\n                          type=\"submit\"\r\n                          onClick={closeModal}\r\n                          className=\"inline-flex justify-center rounded-md border border-transparent bg-blue-100 px-4 py-2 text-sm font-medium text-blue-900 hover:bg-blue-200 focus:outline-none focus-visible:ring-2 focus-visible:ring-blue-500 focus-visible:ring-offset-2\"\r\n                        >\r\n                          {t(\"cancelButtonText\")}\r\n                        </button>\r\n                      </form>\r\n                    </div>\r\n                  </Dialog.Panel>\r\n                </Transition.Child>\r\n              </div>\r\n            </div>\r\n          </Dialog>\r\n        </Transition>\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-xl mt-3\">\r\n          <span className=\"text-blue-700 font-sans font-bold\">\r\n            {t(\"quetionTitleLable\")}\r\n          </span>\r\n          {selectedQuetion.title}\r\n        </h3>\r\n\r\n        <p className=\"my-3 text-lg\">\r\n          <span className=\"text-blue-700 font-sans font-bold text-md\">\r\n            {t(\"quetionDescLable\")}\r\n          </span>\r\n          {selectedQuetion.description}\r\n        </p>\r\n      </div>\r\n\r\n      {/* <div className=\"grid grid-cols-4 gap-2\"> */}\r\n      {optionsDetails.options.length ? (\r\n        <div className=\"mt-5\">\r\n          <h3 className=\"text-xl font-bold my-3\">{t(\"listHeaderOption\")}</h3>\r\n          <div className=\"grid gap-4 grid-cols-4 mt-5\">\r\n            {optionsDetails.options.map((option: any) => (\r\n              <div\r\n                key={`${option.id}-${option.optionName}`}\r\n                className=\"block p-6 bg-white border border-gray-200 rounded-lg shadow hover:bg-gray-100 dark:bg-gray-800 dark:border-gray-700 dark:hover:bg-gray-700\"\r\n              >\r\n                <div className=\"flex justify-between\">\r\n                  {/* <Link to={`${quetion.id}`}> */}\r\n                  <div>\r\n                    <h5 className=\"mb-2 text-lg font-medium tracking-tight text-slate-700 dark:text-white\">\r\n                      <span className=\"font-bold\">{t(\"optionName\")} : </span>\r\n                      {option.optionName}\r\n                    </h5>\r\n                  </div>\r\n                  {/* </Link> */}\r\n                  <button\r\n                    onClick={() => {\r\n                      deleteOptionHandler(option.id);\r\n                    }}\r\n                  >\r\n                    <TrashIcon\r\n                      className=\"h-8 w-8 text-red-600 hover:bg-red-500 hover:text-white border-red-600 border-2 hover:border-red-700 p-1 rounded-md transition duration-1200\"\r\n                      aria-hidden=\"true\"\r\n                    />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div></div>\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-red-500\">{t(\"noOptionadded\")}</p>\r\n      )}\r\n      {/* </div> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OptionsDetail;\r\n"],"names":["fetchOptionDetail","dispatch","id","token","response","API_ENDPOINT","data","error","addOption","queid","args","deleteOption","OptionsDetail","isOpen","setIsOpen","useState","setError","openModal","closeModal","register","handleSubmit","errors","useForm","electionID","quetionID","useParams","t","useTranslation","electionDetailState","useElectionsDetailState","electionDetail","electionDetailDispatch","useElectionDetailDispatch","optionDetailState","useOptionsDetailsState","optionsDetails","isLoading","isError","errorMessage","optionDetailDispatch","useOptionsDetailDispatch","useEffect","fetchElectionDetail","selectedQuetion","_a","quetion","jsx","Fragment","deleteOptionHandler","onSubmit","optionName","jsxs","Link","Transition","Dialog","option","TrashIcon"],"mappings":"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"}